#!/bin/zsh

# Get this script's dir in order to be able to
# use relative paths
mydir=${0%/*}

# Import color definitions
. $mydir/../colors


#
# Set some environment variables
#

LANG=C

_old_IFS=$IFS
_new_IFS="
"


#
# Get OS details
#

# Provides $distro, $kernel, $mem_*_mib, $shell, $disks_*, $cpu_*
. $mydir/distro_specs

# Provides $gpu
if [ -d /sys/bus/pci/devices/ ]
then
	# Custom utility that enumerates PCIe devices
	# and searches in pci.ids(5) for names
	. $mydir/probes/gpu_sys
elif [ -e /bin/glxinfo ] || [ -e /usr/bin/glxinfo ]
then
	# GLXinfo output, by Brian Paul
	. $mydir/probes/gpu_glxinfo
else
	# Fallback to 'lscpci', from 'pciutils'
	. $mydir/probes/gpu_lspci
fi


#
# Random selection of logo to use
#

case $(( $RANDOM % 8 )) in
	0) . $mydir/logos/fox;;     # A small fox head logo
	1) . $mydir/logos/floppy;;  # A floppy disk with randomized colors
	2) . $mydir/logos/cacti;;   # A green cacti with pink flowers
	3) . $mydir/logos/r2d2;;    # R2-D2
	4) . $mydir/logos/windows;; # Microsoft Windows logo
	5) . $mydir/logos/rainbow;; # A colorful rainbow
	*) . $mydir/logos/tux;;     # Tux, the Linux mascot
esac


#
# Shorthands for styles/colors
#

bg="${STYLE_BOLD}${COLOR_FG_GREY}";

r="${COLOR_FG_RED}";
g="${COLOR_FG_GREEN}";
w="${COLOR_FG_GREY}";

b="${STYLE_BOLD}";
i="${STYLE_ITALIC}";
n="${COLOR_NONE}";


#
# Data reformatting
#

# Total memory installed, minus kernel and HW reserved
if [ $mem_total_mib -ge 1536 ]
then
	# Decimal GiB display shenanigans
	mem_total_gib_i=$(( $mem_total_mib / 1024 ))
	mem_total_gib_f=$(( ($mem_total_mib - ($mem_total_gib_i*1024)) * 1000 / 1024 ))

	mem_total="${w}${mem_total_gib_i}.${mem_total_gib_f:0:2}${n} ${i}GiB${n}"
else
	mem_total="${w}${mem_total_mib}${n} ${i}MiB${n}"
fi

# Memory free for use (= available in kernel terms)
if [ $mem_avail_mib -ge 1536 ]
then
	# Decimal GiB display shenanigans
	mem_avail_gib_i=$(( $mem_avail_mib / 1024 ))
	mem_avail_gib_f=$(( ($mem_avail_mib - ($mem_avail_gib_i*1024)) * 1000 / 1024 ))

	mem_avail="${g}${mem_avail_gib_i}.${mem_avail_gib_f:0:2}${n} ${i}GiB${n}"
else
	mem_avail="${g}${mem_avail_mib}${n} ${i}MiB${n}"
fi

# Used memory (difference of the two above)
if [ $mem_used_mib -ge 1536 ]
then
	# Decimal GiB display shenanigans
	mem_used_gib_i=$(( $mem_used_mib / 1024 ))
	mem_used_gib_f=$(( ($mem_used_mib - ($mem_used_gib_i*1024)) * 1000 / 1024 ))
	mem_used_gib=${mem_used_gib_i}.${mem_used_gib_f:0:2}

	mem_used="${r}${mem_used_gib_i}.${mem_used_gib_f:0:2}${n} ${i}GiB${n}"
else
	mem_used="${r}${mem_used_mib}${n} ${i}MiB${n}"
fi


#
# Display logo and data
#

echo "${logo_0}"
echo "${logo_1}${bg}OS:${n} ${distro}"
echo "${logo_2}${bg}Kernel${n} ${kernel}"
echo "${logo_3}${bg}Shell:${n} ${shell}"
echo "${logo_4}${bg}Disk:${n} ${disks_used} / ${disks_total} [${disks_avail} free]"
echo "${logo_5}${bg}CPU:${n} ${cpu_model} [${cpu_cores}C/${cpu_threads}T] @ ${cpu_freq}"
echo "${logo_6}${bg}GPU:${n} ${gpu}"
echo "${logo_7}${bg}RAM:${n} ${mem_used} / ${mem_total} [${mem_avail} free]"
