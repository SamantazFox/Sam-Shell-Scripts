#!/bin/sh

# Get this script's dir in order to be able to
# use relative paths
mydir=${0%/*}

# Import color definitions
colors_file=$mydir/../colors/$TERM
if [ -f $colors_file ]; then . $colors_file; fi


#
# Set some environment variables
#

LANG=C

_old_IFS=$IFS
_new_IFS="
"


#
# Get OS details
#

# Provides $distro and $distro_type
. $mydir/probes/distro

# Provides $kernel and $shell
. $mydir/distro_specs

# Provides $mem_used_mib, $mem_avail_mib and $mem_total_mib
. $mydir/probes/memory_$distro_type

# Provides $cpu_model, $cpu_cores, $cpu_threads, $cpu_freq
if [ -e /usr/bin/lscpu ]
then
	# Use the output of 'lscpu', from util-linux
	. $mydir/probes/cpu_lscpu
elif [ -e /proc/cpuinfo ]
then
	# Parse /proc/cpuinfo
	. $mydir/probes/cpu_cpuinfo
elif [ $distro_type = "bsd" ]
then
	# *BSD parser using 'sysctl' and some dmesg hackery
	. $mydir/probes/cpu_bsd
else
	# Fallback values
	cpu_model="Unknown"
	cpu_cores='?'
	cpu_threads='?'
	cpu_freq='??'
fi

# Provides $gpu
if [ -d /sys/bus/pci/devices/ ]
then
	# Custom utility that enumerates PCIe devices
	# and searches in pci.ids(5) for names
	. $mydir/probes/gpu_sys
elif [ -e /bin/glxinfo ] || [ -e /usr/bin/glxinfo ]
then
	# GLXinfo output, by Brian Paul
	. $mydir/probes/gpu_glxinfo
elif [ -e /usr/bin/lspci ]
then
	# Use 'lscpci', from 'pciutils'
	. $mydir/probes/gpu_lspci
else
	# Fallback, set to unknown
	gpu="Unknown"
fi

# Provides $disks_avail, $disks_used and $disks_total
. $mydir/probes/disks


#
# Random selection of logo to use
#

# Not really random, but the idea is only to get a
# different icon on each load in shells that don't
# provide the $RANDOM variable.
if [ -z $RANDOM ]; then RANDOM=$(date '+%s'); fi

case $(( $RANDOM % 8 )) in
	0) . $mydir/logos/fox;;     # A small fox head logo
	1) . $mydir/logos/floppy;;  # A floppy disk with randomized colors
	2) . $mydir/logos/cacti;;   # A green cacti with pink flowers
	3) . $mydir/logos/r2d2;;    # R2-D2
	4) . $mydir/logos/windows;; # Microsoft Windows logo
	5) . $mydir/logos/rainbow;; # A colorful rainbow
	*) . $mydir/logos/tux;;     # Tux, the Linux mascot
esac


#
# Shorthands for styles/colors
#

bg="${STYLE_BOLD}${COLOR_FG_GREY}";

r="${COLOR_FG_RED}";
g="${COLOR_FG_GREEN}";
w="${COLOR_FG_GREY}";

b="${STYLE_BOLD}";
i="${STYLE_ITALIC}";
n="${COLOR_NONE}";


#
# Data reformatting
#

# CPU frequency (YYZ -> YYZ MHz / XYYZ -> X.YY Ghz)
if [ ${#cpu_freq} -eq 4 ];
then
	cpu_freq_ghz=$(( $cpu_freq / 1000 ))
	cpu_freq_rem=$(( $cpu_freq - ($cpu_freq_ghz*1000) ))
	cpu_freq="${cpu_freq_ghz}.${cpu_freq_rem} GHz"
else
	cpu_freq="${cpu_freq} MHz"
fi

# Total memory installed, minus kernel and HW reserved
if [ $mem_total_mib -ge 1536 ]
then
	# Decimal GiB display shenanigans
	mem_total_gib_i=$(( $mem_total_mib / 1024 ))
	mem_total_gib_f=$(( ($mem_total_mib - ($mem_total_gib_i*1024)) * 1000 / 1024 ))

	mem_total="${w}${mem_total_gib_i}.${mem_total_gib_f%?}${n} ${i}GiB${n}"
else
	mem_total="${w}${mem_total_mib}${n} ${i}MiB${n}"
fi

# Memory free for use (= available in kernel terms)
if [ $mem_avail_mib -ge 1536 ]
then
	# Decimal GiB display shenanigans
	mem_avail_gib_i=$(( $mem_avail_mib / 1024 ))
	mem_avail_gib_f=$(( ($mem_avail_mib - ($mem_avail_gib_i*1024)) * 1000 / 1024 ))

	mem_avail="${g}${mem_avail_gib_i}.${mem_avail_gib_f%?}${n} ${i}GiB${n}"
else
	mem_avail="${g}${mem_avail_mib}${n} ${i}MiB${n}"
fi

# Used memory (difference of the two above)
if [ $mem_used_mib -ge 1536 ]
then
	# Decimal GiB display shenanigans
	mem_used_gib_i=$(( $mem_used_mib / 1024 ))
	mem_used_gib_f=$(( ($mem_used_mib - ($mem_used_gib_i*1024)) * 1000 / 1024 ))

	mem_used="${r}${mem_used_gib_i}.${mem_used_gib_f%?}${n} ${i}GiB${n}"
else
	mem_used="${r}${mem_used_mib}${n} ${i}MiB${n}"
fi


#
# Display logo and data
#

printf "${logo_0}
${logo_1}${bg}OS:${n} ${distro}
${logo_2}${bg}Kernel${n} ${kernel}
${logo_3}${bg}Shell:${n} ${shell}
${logo_4}${bg}Disk:${n} ${disks_used} / ${disks_total} [${disks_avail} free]
${logo_5}${bg}CPU:${n} ${cpu_model} [${cpu_cores}C/${cpu_threads}T] @ ${cpu_freq}
${logo_6}${bg}GPU:${n} ${gpu}
${logo_7}${bg}RAM:${n} ${mem_used} / ${mem_total} [${mem_avail} free]
"
