#!/bin/zsh

# Get this script's dir in order to be able to
# use relative paths
mydir=${0%/*}


# Import color definitions
. $mydir/../colors

# Get OS details
. $mydir/distro_specs

# import logos
. $mydir/logo_tux
. $mydir/logo_fox


#
# Shorthands for styles/colors
#

bg="${STYLE_BOLD}${COLOR_FG_GREY}";

r="${COLOR_FG_RED}";
g="${COLOR_FG_GREEN}";
w="${COLOR_FG_GREY}";

b="${STYLE_BOLD}";
i="${STYLE_ITALIC}";
n="${COLOR_NONE}";


#
# Data reformatting
#

# Total memory installed, minus kernel and HW reserved
if [ $mem_total_mib -ge 1536 ]
then
	# Decimal GiB display shenanigans
	mem_total_gib_i=$(( $mem_total_mib / 1024 ))
	mem_total_gib_f=$(( ($mem_total_mib - ($mem_total_gib_i*1024)) * 1000 / 1024 ))

	mem_total="${w}${mem_total_gib_i}.${mem_total_gib_f:0:2}${n} ${i}GiB${n}"
else
	mem_total="${w}${mem_total_mib}${n} ${i}MiB${n}"
fi

# Memory free for use (= available in kernel terms)
if [ $mem_avail_mib -ge 1536 ]
then
	# Decimal GiB display shenanigans
	mem_avail_gib_i=$(( $mem_avail_mib / 1024 ))
	mem_avail_gib_f=$(( ($mem_avail_mib - ($mem_avail_gib_i*1024)) * 1000 / 1024 ))

	mem_avail="${g}${mem_avail_gib_i}.${mem_avail_gib_f:0:2}${n} ${i}GiB${n}"
else
	mem_avail="${g}${mem_avail_mib}${n} ${i}MiB${n}"
fi

# Used memory (difference of the two above)
if [ $mem_used_mib -ge 1536 ]
then
	# Decimal GiB display shenanigans
	mem_used_gib_i=$(( $mem_used_mib / 1024 ))
	mem_used_gib_f=$(( ($mem_used_mib - ($mem_used_gib_i*1024)) * 1000 / 1024 ))
	mem_used_gib=${mem_used_gib_i}.${mem_used_gib_f:0:2}

	mem_used="${r}${mem_used_gib_i}.${mem_used_gib_f:0:2}${n} ${i}GiB${n}"
else
	mem_used="${r}${mem_used_mib}${n} ${i}MiB${n}"
fi


#
# Text
#

os_specs=(
""
"${bg}OS:${n} ${distro}"
"${bg}Kernel${n} ${kernel}"
"${bg}Shell:${n} ${shell}"
"${bg}Disk:${n} ${disks_used} / ${disks_total} [${disks_avail} free]"
"${bg}CPU:${n} ${cpu_model} [${cpu_cores}C/${cpu_threads}T] @ ${cpu_freq}"
"${bg}GPU:${n} ${gpu}"
"${bg}RAM:${n} ${mem_used} / ${mem_total} [${mem_avail} free]"
)


# Change separator to newline
IFS=$'\n'

# Random selection of logo to use
if $(test $(( $RANDOM % 2 )) -eq 1)
then
	logo=( ${fox_logo[@]} )
else
	logo=( ${tux_logo[@]} )
fi

# Display data + logo
for i in $(seq ${#logo}); do
	printf "${logo[$i]}${os_specs[$i]}\n"
done
