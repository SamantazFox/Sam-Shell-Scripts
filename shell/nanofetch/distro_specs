#!/bin/sh

IFS=$_new_IFS

#
# Distro name
#

# Ubuntu / Debian
if [ -e /etc/lsb-release ]; then
	. /etc/lsb-release
	distro="$DISTRIB_ID $DISTRIB_RELEASE $DISTRIB_CODENAME"

# Fedora / CentOS / Arch Linux / Manjaroo
elif [ -e /etc/os-release ]; then
	. /etc/os-release
	distro="${PRETTY_NAME:-$NAME}"

# RedHat
elif [ -e /etc/redhat-release ]; then distro=$(cat /etc/redhat-release)

# Msys2 / Cygwin / Git for windows
elif [ "$OS" = "Windows_NT" ]; then
	# Get the kernel version and system here
	ms_tmp=$(uname -s)
	system=${ms_tmp%%_*}
	kernel=${ms_tmp#*_}

	case $kernel in
		NT-11.0) ="11";; # to be confirmed
		NT-10.0) ms_ver="10";;
		NT-6.3)  ms_ver="8.1";;
		NT-6.2)  ms_ver="8";;
		NT-6.1)  ms_ver="7";;
		NT-6.0)  ms_ver="Vista";;
		NT-5.0)  ms_ver="XP";;
	esac

	distro="Microsoft Windows $ms_vers ($system)"

# Fallback
else
	distro="Linux generic"
fi


#
# Kernel / Memory / CPU details
#

# Kernel version
if [ -z "$kernel" ]; then
	kernel="$(uname -m) $(uname -sr)"
fi


# Memory informations
get_mem_info()
{
	mem_total_kib=$1
	mem_avail_kib=$2
}

get_mem_info $(sed -nE '
	s/MemTotal:\s+([0-9]+) kB/\1/p
	s/MemAvailable:\s+([0-9]+) kB/\1/p
' /proc/meminfo)

mem_total_mib=$(( $mem_total_kib / 1024 ))
mem_avail_mib=$(( $mem_avail_kib / 1024 ))

mem_used_kib=$(( $mem_total_kib - $mem_avail_kib ))
mem_used_mib=$(( $mem_used_kib / 1024 ))



# CPU informations
get_cpu_info()
{
	cpu_cores_ps=$1
	cpu_freq=$2
	cpu_model=$3
	cpu_sockets=$4
	cpu_threads_pc=$5
	cpu_vendor=$6
}

get_cpu_info $(lscpu | sort -bfd | sed -nE \
	-e ':core
		s/^Core\(s\) per socket:\s+([0-9]+)$/\1/p; t freq
		n; b core' \
	-e ':freq
		s/^CPU max MHz:\s+([0-9]+).+$/\1/p; t model
		s/^CPU MHz:\s+([0-9]+).+$/\1/p; t model
		n; b freq' \
	-e ':model
		/^Model name/ {
			s/( (APU|CPU|Processor).*)$//
			s/^\s*Model name:\s+(.+)/\1/p; t sockets
		}
		n; b model' \
	-e ':sockets
		s/^Socket\(s\):\s+([0-9]+)$/\1/p; t threads
		n; b sockets' \
	-e ':threads
		s/^Thread\(s\) per core:\s+([0-9]+)$/\1/p; t vendor
		n; b threads' \
	-e ':vendor
		s/^Vendor ID:\s+([A-Za-z]+)$/\1/p; t end
		n; b vendor' \
	\
	-e ':end; q'
)


cpu_cores=$(( $cpu_sockets * $cpu_cores_ps ))
cpu_threads=$(( $cpu_cores * $cpu_threads_pc ))

# Format frequency (YYZ -> YYZ MHz / XYYZ -> X.YY Ghz)
if [ ${#cpu_freq} -eq 4 ];
then
	cpu_freq_ghz=$(( $cpu_freq / 1000 ))
	cpu_freq_rem=$(( $cpu_freq - ($cpu_freq_ghz*1000) ))
	cpu_freq="${cpu_freq_ghz}.${cpu_freq_rem} GHz"
else
	cpu_freq="${cpu_freq} MHz"
fi


IFS=$_old_IFS


#
# Other
#

case $SHELL in
	*zsh)  shell=$($SHELL --version | sed -E 's/(\(.*\))//');;
	*bash) shell=$($SHELL --version | sed -E '1s/^(GNU [Bb]ash), version ([0-9.]+).*$/\1 \2/; q');;
	*)     shell="Unknown";;
esac


disks_raw=( $(df -Ph --total --local -x tmpfs -x devtmpfs) )
disks_total=${disks_raw[-5]}
disks_used=${disks_raw[-4]}
disks_avail=${disks_raw[-3]}
